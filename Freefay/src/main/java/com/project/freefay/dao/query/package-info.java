@org.hibernate.annotations.NamedQueries({

		//		@org.hibernate.annotations.NamedQuery(name = "getOrdersWithinPeriod", query = "SELECT s FROM SalesOrder s "
		//				+ "WHERE s.orderDate >= ? AND s.orderDate <= ?"),
		//
		//		@org.hibernate.annotations.NamedQuery(name = "getOrdersWithDetails", query = "SELECT s FROM SalesOrder s "
		//				+ "JOIN FETCH s.customer c ORDER BY c.name"),
		//
		//		@org.hibernate.annotations.NamedQuery(name = "getCustomerOrders", query = "SELECT s FROM SalesOrder s "
		//				+ "JOIN s.customer c WHERE c.customerId = ?"),
		@org.hibernate.annotations.NamedQuery(name = "getUsersId", query = "select s from Users s join s.id  where s.id.username=?"),
		@org.hibernate.annotations.NamedQuery(name = "getUsersById", query = "select s from Users s join s.id  where s.id.usersId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getUsersPortfolio", query = "select p from Portfolio p join p.users  where p.users.id.username=?"),
		@org.hibernate.annotations.NamedQuery(name = "getActiveUsers", query = "select s from Users s where s.active=1"),
		@org.hibernate.annotations.NamedQuery(name = "getUnActiveUsers", query = "select s from Users s where s.active=0"),
		@org.hibernate.annotations.NamedQuery(name = "getunVerifiedUsers", query = "select s from Users s where s.verified=0"),
		@org.hibernate.annotations.NamedQuery(name = "getPendingUsers", query = "select s from Users s where s.enabled=0"),
		@org.hibernate.annotations.NamedQuery(name = "getblockedUsers", query = "select s from Users s where s.blocked=1"),
		@org.hibernate.annotations.NamedQuery(name = "getUsersForEmail", query = "select s from Users s where s.blocked=0 and s.verified=1 and s.enabled=1"),
		@org.hibernate.annotations.NamedQuery(name = "getUserBirthdays", query = "select s from Users s where s.blocked=0 and s.verified=1 and s.enabled=1 and s.dob like ?"),
		@org.hibernate.annotations.NamedQuery(name = "getCategory", query = "select s from Category s join s.users  where s.categoryName=?"),
		@org.hibernate.annotations.NamedQuery(name = "getCategoryActive", query = "select s from Category s join s.users  where s.active=1"),
		@org.hibernate.annotations.NamedQuery(name = "getCategoryById", query = "select s from Category s join s.users  where s.categoryId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getCategoryMenu", query = "select s from Category s join s.users  where s.menu=1"),
		@org.hibernate.annotations.NamedQuery(name = "getRegions", query = "select s from Regions s   where s.country=?"),
		@org.hibernate.annotations.NamedQuery(name = "getCities", query = "select s from Cities s   where s.countryCode=? and s.region=?"),
		@org.hibernate.annotations.NamedQuery(name = "getCountry", query = "select s from Countries s   where s.code=?"),
		@org.hibernate.annotations.NamedQuery(name = "getSubCategory", query = "select s from SubCategory s join s.category   where s.category.categoryId=? and s.active=1"),
		@org.hibernate.annotations.NamedQuery(name = "getFields", query = "select s from Fields s join s.subCategory   where s.subCategory.subCategoryId=? and s.active=1"),
		@org.hibernate.annotations.NamedQuery(name = "getPendingRequests", query = "select s from Requests s join s.users   where s.users.id.username=? and s.active=0"),
		@org.hibernate.annotations.NamedQuery(name = "getApprovedRequests", query = "select s from Requests s join s.users   where s.users.id.username=? and s.active=1 and s.blocked=0"),
		@org.hibernate.annotations.NamedQuery(name = "getUnApprovedRequests", query = "select s from Requests s join s.users   where s.users.id.username=? and s.blocked=1"),
		@org.hibernate.annotations.NamedQuery(name = "getadminPendingRequests", query = "select s from Requests s join s.users   where  s.active=0"),
		@org.hibernate.annotations.NamedQuery(name = "getadminApprovedRequests", query = "select s from Requests s join s.users   where  s.active=1 and s.blocked=0"),
		@org.hibernate.annotations.NamedQuery(name = "getadminUnApprovedRequests", query = "select s from Requests s join s.users   where s.blocked=1"),
		@org.hibernate.annotations.NamedQuery(name = "getRequestById", query = "select s from Requests s join s.users   where s.requestsId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getPendingServices", query = "select s from Services s join s.users   where s.users.id.username=? and s.active=0"),
		@org.hibernate.annotations.NamedQuery(name = "getApprovedServices", query = "select s from Services s join s.users   where s.users.id.username=? and s.active=1 and s.blocked=0"),
		@org.hibernate.annotations.NamedQuery(name = "getUnApprovedServices", query = "select s from Services s join s.users   where s.users.id.username=? and s.blocked=1"),
		@org.hibernate.annotations.NamedQuery(name = "getadminPendingServices", query = "select s from Services s join s.users   where  s.active=0"),
		@org.hibernate.annotations.NamedQuery(name = "getadminApprovedServices", query = "select s from Services s join s.users   where  s.active=1 and s.blocked=0"),
		@org.hibernate.annotations.NamedQuery(name = "getadminUnApprovedServices", query = "select s from Services s join s.users   where s.blocked=1"),
		@org.hibernate.annotations.NamedQuery(name = "getServicesById", query = "select s from Services s join s.users   where s.servicesId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getServicesByDate", query = "select s from Services s join s.users   where s.users.id.username=? and s.date=? and s.time=?"),
		@org.hibernate.annotations.NamedQuery(name = "getLimitedRequests", query = "select r from Requests r where r.active=1 and r.blocked=0 order by r.requestsId desc limit 16 "),
		@org.hibernate.annotations.NamedQuery(name = "getLimitedServices", query = "select s from Services s where s.active=1 and s.blocked=0 order by s.servicesId desc limit 16 "),
		@org.hibernate.annotations.NamedQuery(name = "deleteRequest", query = "DELETE FROM Requests r WHERE r.requestsId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getActiveTokens", query = "select t from Token t join t.users where t.active=1"),
		@org.hibernate.annotations.NamedQuery(name = "getadminApprovedNotifications", query = "select c from CompanyNotification c join c.users where c.active=1 and c.blocked=0 and c.cancelled=0"),
		@org.hibernate.annotations.NamedQuery(name = "getadminDelieveredNotifications", query = "select c from CompanyNotification c join c.users where c.active=0 and c.blocked=0 and c.cancelled=0"),
		@org.hibernate.annotations.NamedQuery(name = "getadminCanncelledNotifications", query = "select c from CompanyNotification c join c.users where c.active=0 and c.blocked=0 and c.cancelled=1"),
		@org.hibernate.annotations.NamedQuery(name = "getadminBlockedNotifications", query = "select c from CompanyNotification c join c.users where c.active=0 and c.blocked=1 and c.cancelled=0"),
		@org.hibernate.annotations.NamedQuery(name = "getNotificationById", query = "select c from CompanyNotification c join c.users where c.companyNotificationId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getTodaysNotifications", query = "select c from CompanyNotification c join c.users where c.active=1 and c.blocked=0 and c.cancelled=0 and c.sendingDate=?"),
		@org.hibernate.annotations.NamedQuery(name = "getStaticAboutUs", query = "select s FROM Static s WHERE s.staticName=?"),
		@org.hibernate.annotations.NamedQuery(name = "getActiveNews", query = "select s from News s where s.active=1 and s.cancelled=0"),
		@org.hibernate.annotations.NamedQuery(name = "getCancelledNews", query = "select s from News s where s.active=0 and s.cancelled=1"),
		@org.hibernate.annotations.NamedQuery(name = "getNewsById", query = "select s from News s where s.newsId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getActiveTestimonials", query = "select s from Testimonials s where s.active=1"),
		@org.hibernate.annotations.NamedQuery(name = "getcancelledTestimonials", query = "select s from Testimonials s where s.active=0"),
		@org.hibernate.annotations.NamedQuery(name = "getTestimonialsById", query = "select s from Testimonials s where s.testimonialsId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getTopTestimonials", query = "select s from Testimonials s where s.active=1 order by s.testimonialsId desc limit 2"),
		@org.hibernate.annotations.NamedQuery(name = "getTopNews", query = "select s from News s where s.active=1 and s.cancelled=0 order by s.newsId desc limit 4"),
		@org.hibernate.annotations.NamedQuery(name = "getUserServices", query = "select s from Services s join s.users  where s.servicesId !=? and s.users.id.usersId =? and s.active=1 and s.blocked=0"),
		@org.hibernate.annotations.NamedQuery(name = "getUserRequests", query = "select r from Requests r join r.users  where r.requestsId !=? and r.users.id.usersId =? and r.active=1 and r.blocked=0"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadId", query = "select m from MessageHeads m join m.usersByFkMessageHeadsUsers1  join m.usersByFkMessageHeadsUsers2  where m.date=? and m.time=? and m.usersByFkMessageHeadsUsers1.id.username=? and m.usersByFkMessageHeadsUsers1.id.usersId=? and m.usersByFkMessageHeadsUsers2.id.username=? and  m.usersByFkMessageHeadsUsers2.id.usersId=? and m.type='services_id' and m.typeId=?"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadByuserIdServices", query = "select m from MessageHeads m join m.usersByFkMessageHeadsUsers1  join m.usersByFkMessageHeadsUsers2  where ( (m.usersByFkMessageHeadsUsers2.id.username=? and  m.usersByFkMessageHeadsUsers2.id.usersId=?) or (m.usersByFkMessageHeadsUsers1.id.username=? and  m.usersByFkMessageHeadsUsers1.id.usersId=?))  and m.type='services_id' order by m.messageHeadsId desc"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadByuserIdRequests", query = "select m from MessageHeads m join m.usersByFkMessageHeadsUsers1  join m.usersByFkMessageHeadsUsers2  where ( (m.usersByFkMessageHeadsUsers2.id.username=? and  m.usersByFkMessageHeadsUsers2.id.usersId=?) or (m.usersByFkMessageHeadsUsers1.id.username=? and  m.usersByFkMessageHeadsUsers1.id.usersId=?))  and m.type='requests_id' order by m.messageHeadsId desc"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadByuserIdAllMail", query = "select m from MessageHeads m join m.usersByFkMessageHeadsUsers1  join m.usersByFkMessageHeadsUsers2  where ( (m.usersByFkMessageHeadsUsers2.id.username=? and  m.usersByFkMessageHeadsUsers2.id.usersId=?) or (m.usersByFkMessageHeadsUsers1.id.username=? and  m.usersByFkMessageHeadsUsers1.id.usersId=?))   order by m.messageHeadsId desc"),
		@org.hibernate.annotations.NamedQuery(name = "getMessagesByHeadId", query = "select m from Messages m join m.messageHeads where m.messageHeads.messageHeadsId =?"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadById", query = "select m from MessageHeads m where m.messageHeadsId =?"),
		@org.hibernate.annotations.NamedQuery(name = "getJobDetailsByMessageHeadId", query = "select j from JobDetails j where j.messageHeads.messageHeadsId=? and j.blocked=0"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadByuserIdServicesadmin", query = "select m from MessageHeads m join m.usersByFkMessageHeadsUsers1  join m.usersByFkMessageHeadsUsers2  where m.type='services_id' order by m.messageHeadsId desc"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadByuserIdRequestsadmin", query = "select m from MessageHeads m join m.usersByFkMessageHeadsUsers1  join m.usersByFkMessageHeadsUsers2  where   m.type='requests_id' order by m.messageHeadsId desc"),
		@org.hibernate.annotations.NamedQuery(name = "getMessageHeadByuserIdAllMailadmin", query = "select m from MessageHeads m join m.usersByFkMessageHeadsUsers1  join m.usersByFkMessageHeadsUsers2   order by m.messageHeadsId desc"),

})
package com.project.freefay.dao.query;