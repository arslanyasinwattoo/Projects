package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PaymentCharges generated by hbm2java
 */
@Entity
@Table(name = "payment_charges", catalog = "freefay")
public class PaymentCharges implements java.io.Serializable {

	private Long paymentChargesId;
	private Users users;
	private Date date;
	private Date time;
	private double percentage;
	private int active;
	private int blocked;
	private Set<Payment> payments = new HashSet<Payment>(0);
	private Set<Tips> tipses = new HashSet<Tips>(0);
	private Set<Donations> donationses = new HashSet<Donations>(0);

	public PaymentCharges() {
	}

	public PaymentCharges(Users users, Date date, Date time, double percentage,
			int active, int blocked) {
		this.users = users;
		this.date = date;
		this.time = time;
		this.percentage = percentage;
		this.active = active;
		this.blocked = blocked;
	}

	public PaymentCharges(Users users, Date date, Date time, double percentage,
			int active, int blocked, Set<Payment> payments, Set<Tips> tipses,
			Set<Donations> donationses) {
		this.users = users;
		this.date = date;
		this.time = time;
		this.percentage = percentage;
		this.active = active;
		this.blocked = blocked;
		this.payments = payments;
		this.tipses = tipses;
		this.donationses = donationses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "payment_charges_id", unique = true, nullable = false)
	public Long getPaymentChargesId() {
		return this.paymentChargesId;
	}

	public void setPaymentChargesId(Long paymentChargesId) {
		this.paymentChargesId = paymentChargesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "admin_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "admin_username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", nullable = false, length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "percentage", nullable = false, precision = 22, scale = 0)
	public double getPercentage() {
		return this.percentage;
	}

	public void setPercentage(double percentage) {
		this.percentage = percentage;
	}

	@Column(name = "active", nullable = false)
	public int getActive() {
		return this.active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	@Column(name = "blocked", nullable = false)
	public int getBlocked() {
		return this.blocked;
	}

	public void setBlocked(int blocked) {
		this.blocked = blocked;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paymentCharges")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paymentCharges")
	public Set<Tips> getTipses() {
		return this.tipses;
	}

	public void setTipses(Set<Tips> tipses) {
		this.tipses = tipses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paymentCharges")
	public Set<Donations> getDonationses() {
		return this.donationses;
	}

	public void setDonationses(Set<Donations> donationses) {
		this.donationses = donationses;
	}

}
