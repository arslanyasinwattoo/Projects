package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserExperience generated by hbm2java
 */
@Entity
@Table(name = "user_experience", catalog = "freefay")
public class UserExperience implements java.io.Serializable {

	private Long userExperienceId;
	private Users users;
	private Portfolio portfolio;
	private String type;
	private long typeId;
	private String experienceLevel;
	private Date date;
	private Date time;
	private int blocked;
	private int deleted;

	public UserExperience() {
	}

	public UserExperience(Users users, Portfolio portfolio, String type,
			long typeId, String experienceLevel, Date date, Date time,
			int blocked, int deleted) {
		this.users = users;
		this.portfolio = portfolio;
		this.type = type;
		this.typeId = typeId;
		this.experienceLevel = experienceLevel;
		this.date = date;
		this.time = time;
		this.blocked = blocked;
		this.deleted = deleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_experience_id", unique = true, nullable = false)
	public Long getUserExperienceId() {
		return this.userExperienceId;
	}

	public void setUserExperienceId(Long userExperienceId) {
		this.userExperienceId = userExperienceId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "users_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "portfolio_id", nullable = false)
	public Portfolio getPortfolio() {
		return this.portfolio;
	}

	public void setPortfolio(Portfolio portfolio) {
		this.portfolio = portfolio;
	}

	@Column(name = "type", nullable = false, length = 15)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "type_id", nullable = false)
	public long getTypeId() {
		return this.typeId;
	}

	public void setTypeId(long typeId) {
		this.typeId = typeId;
	}

	@Column(name = "experience_level", nullable = false, length = 12)
	public String getExperienceLevel() {
		return this.experienceLevel;
	}

	public void setExperienceLevel(String experienceLevel) {
		this.experienceLevel = experienceLevel;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", nullable = false, length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "blocked", nullable = false)
	public int getBlocked() {
		return this.blocked;
	}

	public void setBlocked(int blocked) {
		this.blocked = blocked;
	}

	@Column(name = "deleted", nullable = false)
	public int getDeleted() {
		return this.deleted;
	}

	public void setDeleted(int deleted) {
		this.deleted = deleted;
	}

}
