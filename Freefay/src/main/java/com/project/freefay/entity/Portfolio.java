package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Portfolio generated by hbm2java
 */
@Entity
@Table(name = "portfolio", catalog = "freefay")
public class Portfolio implements java.io.Serializable {

	private Long portfolioId;
	private Users users;
	private String portfolioName;
	private String portfolioPitch;
	private String experienceDescription;
	private Date date;
	private Date time;
	private Integer active;
	private Integer blocked;
	private long portfolioImageId;
	private Set<Views> viewses = new HashSet<Views>(0);
	private Set<Search> searches = new HashSet<Search>(0);
	private Set<Requests> requestses = new HashSet<Requests>(0);
	private Set<UserExperience> userExperiences = new HashSet<UserExperience>(0);
	private Set<Ratings> ratingses = new HashSet<Ratings>(0);
	private Set<Services> serviceses = new HashSet<Services>(0);
	private Set<CountryRestrictions> countryRestrictionses = new HashSet<CountryRestrictions>(
			0);
	private Set<JobDetails> jobDetailsesForRequesteePortfolioId = new HashSet<JobDetails>(
			0);
	private Set<JobDetails> jobDetailsesForProviderPortfolioId = new HashSet<JobDetails>(
			0);

	public Portfolio() {
	}

	public Portfolio(Users users, String experienceDescription,
			long portfolioImageId) {
		this.users = users;
		this.experienceDescription = experienceDescription;
		this.portfolioImageId = portfolioImageId;
	}

	public Portfolio(Users users, String portfolioName, String portfolioPitch,
			String experienceDescription, Date date, Date time, Integer active,
			Integer blocked, long portfolioImageId, Set<Views> viewses,
			Set<Search> searches, Set<Requests> requestses,
			Set<UserExperience> userExperiences, Set<Ratings> ratingses,
			Set<Services> serviceses,
			Set<CountryRestrictions> countryRestrictionses,
			Set<JobDetails> jobDetailsesForRequesteePortfolioId,
			Set<JobDetails> jobDetailsesForProviderPortfolioId) {
		this.users = users;
		this.portfolioName = portfolioName;
		this.portfolioPitch = portfolioPitch;
		this.experienceDescription = experienceDescription;
		this.date = date;
		this.time = time;
		this.active = active;
		this.blocked = blocked;
		this.portfolioImageId = portfolioImageId;
		this.viewses = viewses;
		this.searches = searches;
		this.requestses = requestses;
		this.userExperiences = userExperiences;
		this.ratingses = ratingses;
		this.serviceses = serviceses;
		this.countryRestrictionses = countryRestrictionses;
		this.jobDetailsesForRequesteePortfolioId = jobDetailsesForRequesteePortfolioId;
		this.jobDetailsesForProviderPortfolioId = jobDetailsesForProviderPortfolioId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "portfolio_id", unique = true, nullable = false)
	public Long getPortfolioId() {
		return this.portfolioId;
	}

	public void setPortfolioId(Long portfolioId) {
		this.portfolioId = portfolioId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({
			@JoinColumn(name = "users_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "portfolio_name", length = 45)
	public String getPortfolioName() {
		return this.portfolioName;
	}

	public void setPortfolioName(String portfolioName) {
		this.portfolioName = portfolioName;
	}

	@Column(name = "portfolio_pitch", length = 45)
	public String getPortfolioPitch() {
		return this.portfolioPitch;
	}

	public void setPortfolioPitch(String portfolioPitch) {
		this.portfolioPitch = portfolioPitch;
	}

	@Column(name = "experience_description", nullable = false, length = 500)
	public String getExperienceDescription() {
		return this.experienceDescription;
	}

	public void setExperienceDescription(String experienceDescription) {
		this.experienceDescription = experienceDescription;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "active")
	public Integer getActive() {
		return this.active;
	}

	public void setActive(Integer active) {
		this.active = active;
	}

	@Column(name = "blocked")
	public Integer getBlocked() {
		return this.blocked;
	}

	public void setBlocked(Integer blocked) {
		this.blocked = blocked;
	}

	@Column(name = "portfolio_image_id", nullable = false)
	public long getPortfolioImageId() {
		return this.portfolioImageId;
	}

	public void setPortfolioImageId(long portfolioImageId) {
		this.portfolioImageId = portfolioImageId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolio")
	public Set<Views> getViewses() {
		return this.viewses;
	}

	public void setViewses(Set<Views> viewses) {
		this.viewses = viewses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolio")
	public Set<Search> getSearches() {
		return this.searches;
	}

	public void setSearches(Set<Search> searches) {
		this.searches = searches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolio")
	public Set<Requests> getRequestses() {
		return this.requestses;
	}

	public void setRequestses(Set<Requests> requestses) {
		this.requestses = requestses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolio")
	public Set<UserExperience> getUserExperiences() {
		return this.userExperiences;
	}

	public void setUserExperiences(Set<UserExperience> userExperiences) {
		this.userExperiences = userExperiences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolio")
	public Set<Ratings> getRatingses() {
		return this.ratingses;
	}

	public void setRatingses(Set<Ratings> ratingses) {
		this.ratingses = ratingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolio")
	public Set<Services> getServiceses() {
		return this.serviceses;
	}

	public void setServiceses(Set<Services> serviceses) {
		this.serviceses = serviceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolio")
	public Set<CountryRestrictions> getCountryRestrictionses() {
		return this.countryRestrictionses;
	}

	public void setCountryRestrictionses(
			Set<CountryRestrictions> countryRestrictionses) {
		this.countryRestrictionses = countryRestrictionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolioByRequesteePortfolioId")
	public Set<JobDetails> getJobDetailsesForRequesteePortfolioId() {
		return this.jobDetailsesForRequesteePortfolioId;
	}

	public void setJobDetailsesForRequesteePortfolioId(
			Set<JobDetails> jobDetailsesForRequesteePortfolioId) {
		this.jobDetailsesForRequesteePortfolioId = jobDetailsesForRequesteePortfolioId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portfolioByProviderPortfolioId")
	public Set<JobDetails> getJobDetailsesForProviderPortfolioId() {
		return this.jobDetailsesForProviderPortfolioId;
	}

	public void setJobDetailsesForProviderPortfolioId(
			Set<JobDetails> jobDetailsesForProviderPortfolioId) {
		this.jobDetailsesForProviderPortfolioId = jobDetailsesForProviderPortfolioId;
	}

}
