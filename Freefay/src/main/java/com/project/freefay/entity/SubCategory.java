package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SubCategory generated by hbm2java
 */
@Entity
@Table(name = "sub_category", catalog = "freefay")
public class SubCategory implements java.io.Serializable {

	private Long subCategoryId;
	private Users users;
	private Category category;
	private String subCategoryName;
	private Date date;
	private Date time;
	private int active;
	private Set<Fields> fieldses = new HashSet<Fields>(0);
	private Set<Search> searches = new HashSet<Search>(0);

	public SubCategory() {
	}

	public SubCategory(Users users, Category category, String subCategoryName,
			Date date, Date time, int active) {
		this.users = users;
		this.category = category;
		this.subCategoryName = subCategoryName;
		this.date = date;
		this.time = time;
		this.active = active;
	}

	public SubCategory(Users users, Category category, String subCategoryName,
			Date date, Date time, int active, Set<Fields> fieldses,
			Set<Search> searches) {
		this.users = users;
		this.category = category;
		this.subCategoryName = subCategoryName;
		this.date = date;
		this.time = time;
		this.active = active;
		this.fieldses = fieldses;
		this.searches = searches;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "sub_category_id", unique = true, nullable = false)
	public Long getSubCategoryId() {
		return this.subCategoryId;
	}

	public void setSubCategoryId(Long subCategoryId) {
		this.subCategoryId = subCategoryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "admin_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "admin_username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "sub_category_name", nullable = false, length = 45)
	public String getSubCategoryName() {
		return this.subCategoryName;
	}

	public void setSubCategoryName(String subCategoryName) {
		this.subCategoryName = subCategoryName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", nullable = false, length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "active", nullable = false)
	public int getActive() {
		return this.active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subCategory")
	public Set<Fields> getFieldses() {
		return this.fieldses;
	}

	public void setFieldses(Set<Fields> fieldses) {
		this.fieldses = fieldses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subCategory")
	public Set<Search> getSearches() {
		return this.searches;
	}

	public void setSearches(Set<Search> searches) {
		this.searches = searches;
	}

}
