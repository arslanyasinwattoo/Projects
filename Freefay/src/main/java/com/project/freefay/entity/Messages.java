package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Messages generated by hbm2java
 */
@Entity
@Table(name = "messages", catalog = "freefay")
public class Messages implements java.io.Serializable {

	private Long messagesId;
	private Attachments attachments;
	private MessageHeads messageHeads;
	private String messageText;
	private Date date;
	private Date time;
	private Users users;
	private int blocked;
	private int messageRead;
	private int messageTyping;

	public Messages() {
	}

	public Messages(Attachments attachments, Users users,
			MessageHeads messageHeads, String messageText, Date date,
			Date time, int blocked, int messageRead, int messageTyping) {
		this.attachments = attachments;
		this.users = users;
		this.messageHeads = messageHeads;
		this.messageText = messageText;
		this.date = date;
		this.time = time;
		this.blocked = blocked;
		this.messageRead = messageRead;
		this.messageTyping = messageTyping;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "messages_id", unique = true, nullable = false)
	public Long getMessagesId() {
		return this.messagesId;
	}

	public void setMessagesId(Long messagesId) {
		this.messagesId = messagesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "users_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "attachments_id", nullable = true)
	public Attachments getAttachments() {
		return this.attachments;
	}

	public void setAttachments(Attachments attachments) {
		this.attachments = attachments;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "message_heads_id", nullable = false)
	public MessageHeads getMessageHeads() {
		return this.messageHeads;
	}

	public void setMessageHeads(MessageHeads messageHeads) {
		this.messageHeads = messageHeads;
	}

	@Column(name = "message_text", length = 20000)
	public String getMessageText() {
		return this.messageText;
	}

	public void setMessageText(String messageText) {
		this.messageText = messageText;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "blocked", nullable = false)
	public int getBlocked() {
		return this.blocked;
	}

	public void setBlocked(int blocked) {
		this.blocked = blocked;
	}

	@Column(name = "message_read", nullable = false)
	public int getMessageRead() {
		return messageRead;
	}

	public void setMessageRead(int messageRead) {
		this.messageRead = messageRead;
	}

	@Column(name = "message_typing", nullable = false)
	public int getMessageTyping() {
		return messageTyping;
	}

	public void setMessageTyping(int messageTyping) {
		this.messageTyping = messageTyping;
	}

}
