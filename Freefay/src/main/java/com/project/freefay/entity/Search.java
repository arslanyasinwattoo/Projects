package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Search generated by hbm2java
 */
@Entity
@Table(name = "search", catalog = "freefay")
public class Search implements java.io.Serializable {

	private Long searchId;
	private Fields fields;
	private SubCategory subCategory;
	private Services services;
	private Requests requests;
	private Users users;
	private Portfolio portfolio;
	private Category category;
	private String searchTerm;
	private Date date;
	private Date time;

	public Search() {
	}

	public Search(Fields fields, SubCategory subCategory, Services services,
			Requests requests, Users users, Portfolio portfolio,
			Category category) {
		this.fields = fields;
		this.subCategory = subCategory;
		this.services = services;
		this.requests = requests;
		this.users = users;
		this.portfolio = portfolio;
		this.category = category;
	}

	public Search(Fields fields, SubCategory subCategory, Services services,
			Requests requests, Users users, Portfolio portfolio,
			Category category, String searchTerm, Date date, Date time) {
		this.fields = fields;
		this.subCategory = subCategory;
		this.services = services;
		this.requests = requests;
		this.users = users;
		this.portfolio = portfolio;
		this.category = category;
		this.searchTerm = searchTerm;
		this.date = date;
		this.time = time;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "search_id", unique = true, nullable = false)
	public Long getSearchId() {
		return this.searchId;
	}

	public void setSearchId(Long searchId) {
		this.searchId = searchId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fields_id", nullable = false)
	public Fields getFields() {
		return this.fields;
	}

	public void setFields(Fields fields) {
		this.fields = fields;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sub_category_id", nullable = false)
	public SubCategory getSubCategory() {
		return this.subCategory;
	}

	public void setSubCategory(SubCategory subCategory) {
		this.subCategory = subCategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "services_id", nullable = false)
	public Services getServices() {
		return this.services;
	}

	public void setServices(Services services) {
		this.services = services;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "requests_id", nullable = false)
	public Requests getRequests() {
		return this.requests;
	}

	public void setRequests(Requests requests) {
		this.requests = requests;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "users_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "portfolio_id", nullable = false)
	public Portfolio getPortfolio() {
		return this.portfolio;
	}

	public void setPortfolio(Portfolio portfolio) {
		this.portfolio = portfolio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "search_term", length = 45)
	public String getSearchTerm() {
		return this.searchTerm;
	}

	public void setSearchTerm(String searchTerm) {
		this.searchTerm = searchTerm;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

}
