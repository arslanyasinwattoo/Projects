package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Views generated by hbm2java
 */
@Entity
@Table(name = "views", catalog = "freefay")
public class Views implements java.io.Serializable {

	private Long viewsId;
	private Services services;
	private Requests requests;
	private Users users;
	private Portfolio portfolio;
	private Date date;
	private Date time;

	public Views() {
	}

	public Views(Services services, Requests requests, Users users,
			Portfolio portfolio, Date date, Date time) {
		this.services = services;
		this.requests = requests;
		this.users = users;
		this.portfolio = portfolio;
		this.date = date;
		this.time = time;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "views_id", unique = true, nullable = false)
	public Long getViewsId() {
		return this.viewsId;
	}

	public void setViewsId(Long viewsId) {
		this.viewsId = viewsId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "services_id", nullable = false)
	public Services getServices() {
		return this.services;
	}

	public void setServices(Services services) {
		this.services = services;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "requests_id", nullable = false)
	public Requests getRequests() {
		return this.requests;
	}

	public void setRequests(Requests requests) {
		this.requests = requests;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "users_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "portfolio_id", nullable = false)
	public Portfolio getPortfolio() {
		return this.portfolio;
	}

	public void setPortfolio(Portfolio portfolio) {
		this.portfolio = portfolio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", nullable = false, length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

}
