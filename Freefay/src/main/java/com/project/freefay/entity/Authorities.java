package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Authorities generated by hbm2java
 */
@Entity
@Table(name = "authorities", catalog = "freefay")
public class Authorities implements java.io.Serializable {

	private AuthoritiesId id;
	private Users users;
	private String authority;

	public Authorities() {
	}

	public Authorities(AuthoritiesId id, Users users) {
		this.id = id;
		this.users = users;
	}

	public Authorities(AuthoritiesId id, Users users, String authority) {
		this.id = id;
		this.users = users;
		this.authority = authority;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "authoritiesId", column = @Column(name = "authorities_id", nullable = false)),
			@AttributeOverride(name = "username", column = @Column(name = "username", nullable = false, length = 45)),
			@AttributeOverride(name = "usersId", column = @Column(name = "users_id", nullable = false)) })
	public AuthoritiesId getId() {
		return this.id;
	}

	public void setId(AuthoritiesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "users_id", referencedColumnName = "users_id", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "username", referencedColumnName = "username", nullable = false, insertable = false, updatable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "authority", length = 11)
	public String getAuthority() {
		return this.authority;
	}

	public void setAuthority(String authority) {
		this.authority = authority;
	}

}
