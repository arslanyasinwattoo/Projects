package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Requests generated by hbm2java
 */
@Entity
@Table(name = "requests", catalog = "freefay")
public class Requests implements java.io.Serializable {

	private Long requestsId;
	private Users users;
	private Category category;
	private SubCategory subCategory;
	private Fields fields;
	private Portfolio portfolio;
	private String requestName;
	private double budget;
	private Date date;
	private Date time;
	private int active;
	private int blocked;
	private String description;
	private Set<Views> viewses = new HashSet<Views>(0);
	private Set<Search> searches = new HashSet<Search>(0);

	public Requests() {
	}

	public Requests(Users users, Category category, SubCategory subCategory,
			Fields fields, Portfolio portfolio, String requestName,
			double budget, Date date, Date time, int active, int blocked) {
		this.users = users;
		this.category = category;
		this.subCategory = subCategory;
		this.fields = fields;
		this.portfolio = portfolio;
		this.requestName = requestName;
		this.budget = budget;
		this.date = date;
		this.time = time;
		this.active = active;
		this.blocked = blocked;
	}

	public Requests(Users users, Category category, SubCategory subCategory,
			Fields fields, Portfolio portfolio, String requestName,
			double budget, Date date, Date time, int active, int blocked,
			Set<Views> viewses, Set<Search> searches) {
		this.users = users;
		this.category = category;
		this.subCategory = subCategory;
		this.fields = fields;
		this.portfolio = portfolio;
		this.requestName = requestName;
		this.budget = budget;
		this.date = date;
		this.time = time;
		this.active = active;
		this.blocked = blocked;
		this.viewses = viewses;
		this.searches = searches;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "requests_id", unique = true, nullable = false)
	public Long getRequestsId() {
		return this.requestsId;
	}

	public void setRequestsId(Long requestsId) {
		this.requestsId = requestsId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "users_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "sub_category_id", nullable = false)
	public SubCategory getSubCategory() {
		return this.subCategory;
	}

	public void setSubCategory(SubCategory subCategory) {
		this.subCategory = subCategory;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "fields_id", nullable = false)
	public Fields getFields() {
		return fields;
	}

	public void setFields(Fields fields) {
		this.fields = fields;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "portfolio_id", nullable = false)
	public Portfolio getPortfolio() {
		return this.portfolio;
	}

	public void setPortfolio(Portfolio portfolio) {
		this.portfolio = portfolio;
	}

	@Column(name = "request_name", nullable = false, length = 50)
	public String getRequestName() {
		return this.requestName;
	}

	public void setRequestName(String requestName) {
		this.requestName = requestName;
	}

	@Column(name = "budget", nullable = false, precision = 22, scale = 0)
	public double getBudget() {
		return this.budget;
	}

	public void setBudget(double budget) {
		this.budget = budget;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", nullable = false, length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "active", nullable = false)
	public int getActive() {
		return this.active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	@Column(name = "blocked", nullable = false)
	public int getBlocked() {
		return this.blocked;
	}

	public void setBlocked(int blocked) {
		this.blocked = blocked;
	}

	@Column(name = "description", length = 1000)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "requests")
	public Set<Views> getViewses() {
		return this.viewses;
	}

	public void setViewses(Set<Views> viewses) {
		this.viewses = viewses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "requests")
	public Set<Search> getSearches() {
		return this.searches;
	}

	public void setSearches(Set<Search> searches) {
		this.searches = searches;
	}

}
