package com.project.freefay.entity;

// Generated Dec 23, 2015 6:18:07 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Donations generated by hbm2java
 */
@Entity
@Table(name = "donations", catalog = "freefay")
public class Donations implements java.io.Serializable {

	private Long donationsId;
	private PaymentCharges paymentCharges;
	private Users users;
	private JobDetails jobDetails;
	private Date date;
	private Date time;
	private double amount;
	private String rating;
	private String reason;

	public Donations() {
	}

	public Donations(PaymentCharges paymentCharges, Users users,
			JobDetails jobDetails, Date date, Date time, double amount,
			String rating, String reason) {
		this.paymentCharges = paymentCharges;
		this.users = users;
		this.jobDetails = jobDetails;
		this.date = date;
		this.time = time;
		this.amount = amount;
		this.rating = rating;
		this.reason = reason;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "donations_id", unique = true, nullable = false)
	public Long getDonationsId() {
		return this.donationsId;
	}

	public void setDonationsId(Long donationsId) {
		this.donationsId = donationsId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payment_charges_id", nullable = false)
	public PaymentCharges getPaymentCharges() {
		return this.paymentCharges;
	}

	public void setPaymentCharges(PaymentCharges paymentCharges) {
		this.paymentCharges = paymentCharges;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "doner_id", referencedColumnName = "users_id", nullable = false),
			@JoinColumn(name = "doner_username", referencedColumnName = "username", nullable = false) })
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "job_details_id", nullable = false)
	public JobDetails getJobDetails() {
		return this.jobDetails;
	}

	public void setJobDetails(JobDetails jobDetails) {
		this.jobDetails = jobDetails;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "time", nullable = false, length = 8)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Column(name = "amount", nullable = false, precision = 22, scale = 0)
	public double getAmount() {
		return this.amount;
	}

	public void setAmount(double amount) {
		this.amount = amount;
	}

	@Column(name = "rating", nullable = false, length = 2)
	public String getRating() {
		return this.rating;
	}

	public void setRating(String rating) {
		this.rating = rating;
	}

	@Column(name = "reason", nullable = false, length = 150)
	public String getReason() {
		return this.reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

}
